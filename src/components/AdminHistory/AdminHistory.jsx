// src/components/AdminHistory/AdminHistory.jsx
import React, { useState, useEffect } from 'react';
import { operationsService } from '../../services/firebaseService';
import { useShopContext } from '../../context/ShopContext.jsx';

const AdminHistory = () => {
  const { products } = useShopContext();
  const [operations, setOperations] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadOperations = async () => {
      try {
        const ops = await operationsService.getOperations();
        setOperations(ops);
      } catch (error) {
        console.error('Error loading operations:', error);
      } finally {
        setLoading(false);
      }
    };

    loadOperations();

    // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const unsubscribe = operationsService.subscribeToOperations(setOperations);
    return unsubscribe;
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const getProductName = (productId) => {
    const product = products.find(p => p.id === productId);
    return product ? product.title : `–¢–æ–≤–∞—Ä #${productId}`;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
  const formatDate = (timestamp) => {
    if (!timestamp) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞';
    return new Date(timestamp?.toDate?.() || timestamp).toLocaleString('ru-RU');
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
  const getOperationDescription = (operation) => {
    switch (operation.action) {
      case 'reserve':
        return `–†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ ${operation.quantity} —à—Ç. —Ä–∞–∑–º–µ—Ä–∞ ${operation.size} (${getProductName(operation.productId)})`;
      case 'release':
        return `–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ ${operation.quantity} —à—Ç. —Ä–∞–∑–º–µ—Ä–∞ ${operation.size} (${getProductName(operation.productId)})`;
      case 'update_quantity':
        return `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–∑–º–µ—Ä–∞ ${operation.size} –¥–æ ${operation.quantity} (${getProductName(operation.productId)})`;
      case 'create_order':
        return `–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ #${operation.orderId} –Ω–∞ —Å—É–º–º—É ${operation.total || 0} —Ä—É–±. (${operation.customer || '–ö–ª–∏–µ–Ω—Ç'})`;
      case 'update_order_status':
        return `–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #${operation.orderId} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "${operation.status}"`;
      default:
        return operation.details || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è';
    }
  };

  if (loading) {
    return (
      <div className="max-w-6xl mx-auto p-4 min-h-screen flex items-center justify-center">
        <div className="text-white">–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</div>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto p-4 min-h-screen">
      <div className="relative z-10">
        <div className="flex items-center justify-between mb-6">
          <h1 className="text-2xl font-bold text-white drop-shadow-sm">üìä –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</h1>
          <button
            onClick={() => window.history.back()}
            className="px-4 py-2 rounded bg-white/10 backdrop-blur-md border border-white/20 text-white hover:bg-white/15 transition-all"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
        </div>

        <div className="p-6 rounded-2xl bg-white/10 backdrop-blur-2xl border border-white/20 shadow-2xl">
          <h2 className="text-xl font-semibold mb-4 text-white">
            üìã –°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π ({operations.length})
          </h2>
          
          <div className="overflow-x-auto">
            <table className="min-w-full">
              <thead>
                <tr className="bg-white/10 backdrop-blur-md">
                  <th className="px-4 py-3 text-left text-white font-semibold">–î–∞—Ç–∞</th>
                  <th className="px-4 py-3 text-left text-white font-semibold">–û–ø–µ—Ä–∞—Ü–∏—è</th>
                  <th className="px-4 py-3 text-left text-white font-semibold">–î–µ—Ç–∞–ª–∏</th>
                  <th className="px-4 py-3 text-left text-white font-semibold">ID</th>
                </tr>
              </thead>
              <tbody>
                {operations.map((operation, index) => (
                  <tr key={operation.id || index} className="border-b border-white/20">
                    <td className="px-4 py-3 text-white/80 text-sm">
                      {formatDate(operation.timestamp)}
                    </td>
                    <td className="px-4 py-3 text-white font-medium">
                      {operation.action === 'reserve' && 'üì¶ –†–µ–∑–µ—Ä–≤'}
                      {operation.action === 'release' && 'üîÑ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ'}
                      {operation.action === 'update_quantity' && '‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ'}
                      {operation.action === 'create_order' && '‚úÖ –ó–∞–∫–∞–∑'}
                      {operation.action === 'update_order_status' && 'üîÑ –°—Ç–∞—Ç—É—Å'}
                      {!['reserve', 'release', 'update_quantity', 'create_order', 'update_order_status'].includes(operation.action) && '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
                    </td>
                    <td className="px-4 py-3 text-white/90">
                      {getOperationDescription(operation)}
                    </td>
                    <td className="px-4 py-3 text-white/60 text-sm">
                      {operation.productId && `–¢–æ–≤–∞—Ä: ${operation.productId}`}
                      {operation.orderId && `–ó–∞–∫–∞–∑: ${operation.orderId}`}
                      {operation.adminId && `–ê–¥–º–∏–Ω: ${operation.adminId}`}
                      {!operation.productId && !operation.orderId && !operation.adminId && '‚Äî'}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {operations.length === 0 && (
            <div className="text-center text-white/60 py-8">
              –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default AdminHistory;